# vim:fdm=marker

# Aliases                                                                   {{{1
# ==============================================================================

alias sqlworkbenchj='java -jar  /Applications/SQLWorkbenchJ.app/Contents/Java/sqlworkbench.jar &'
alias doom='emacs --with-profile doom'

# OS specific tools                                                         {{{1
# ==============================================================================

# Add stern completion
source <(stern --completion=zsh)

# General OS helper functions                                               {{{1
# ==============================================================================

# Go to the directory where the finder window is currently looking
function finder() {
    target=$(osascript -e 'tell application "Finder" to if (count of Finder windows) > 0 then get POSIX path of (target of front Finder window as text)')
    if [ "$target" != "" ]; then
        cd "$target"
        pwd
    else
        echo 'No Finder window found' >&2
    fi
}

# Display power usage
function power-usage() {
    echo 'Power usage'
    pmset -g batt
    echo

    echo 'Top 20 power consuming tasks'
    echo
    top -l5 -n20 -stats pid,command,power -o power | tail -n21
}

# Git                                                                       {{{1
# ==============================================================================

# Show the current credentials
function git-credentials-show() {
    printf "protocol=https\nhost=github.com\n" | git credential-osxkeychain get | grep username
}

# Erase the current credentials
function git-credentials-erase() {
    echo "Erasing current credentials"
    printf "protocol=https\nhost=github.com\n" | git credential-osxkeychain erase
    printf "protocol=https\nhost=github-personal\n" | git credential-osxkeychain erase
    printf "protocol=https\nhost=github-work\n" | git credential-osxkeychain erase
}

# Switch the current credentials
function git-credentials-switch() {
    local user=$1
    local token=$(cat ~/.git-cli-tokens | grep "${user}" | cut -f 2)

    if [[ -z "${user}" ]]; then
        echo "Please specify a user"
    else 
        if [[ "${token}" != "" ]]; then
            git-credentials-erase
            echo "Setting new credentials to those for user ${user}"
            printf "protocol=https\nhost=github.com\nusername=%s\npassword=%s\n" "${user}" "${token}" | git credential-osxkeychain store
        else
            echo "User '${user}' not found"
        fi
    fi
}
compdef '_alternative "arguments:custom arg:(stuw-els stubillwhite)"' git-credentials-switch
