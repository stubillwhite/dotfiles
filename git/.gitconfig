[user]
	useConfigOnly = true

[push]
    default = simple

[init]
	defaultBranch = main

[fetch]
	prune = true

[pull]
	rebase = true

[alias]
    grep-history = "!f() { git --no-pager grep \"$@\" $(git rev-list --all | tac); }; f"
    pretty-log = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %aN%C(reset)%C(bold yellow)%d%C(reset)' 
    pretty-log-with-dates = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%aI)%C(reset) %C(white)%s%C(reset) %C(dim white)- %aN%C(reset)%C(bold yellow)%d%C(reset)' 
    log-recent = "!f() { git pretty-log --since=\"${GIT_RECENT_DAYS:-3} days ago\"; }; f"
    logv = pretty-log --all
    logvv = pretty-log-with-dates --all
    diff-base = !git diff --ignore-all-space $(git merge-base --fork-point ${GIT_TRUNK})
    difftool-base = !git difftool --trust-exit-code -y $(git merge-base --fork-point ${GIT_TRUNK})
    push-branch = !git push --set-upstream origin $(git symbolic-ref --short HEAD)
    branch-statuses = branch -vv
    accept-ours = "!f() { [ -z \"$@\" ] && set - '.'; git checkout --ours -- \"$@\"; git add -u -- \"$@\"; }; f"
    accept-theirs = "!f() { [ -z \"$@\" ] && set - '.'; git checkout --theirs -- \"$@\"; git add -u -- \"$@\"; }; f"
    contributor-stats = !git --no-pager log --format="%aN" --no-merges | sort | uniq -c | sort -r
    unmerged-branches = !git --no-pager branch --no-merged ${GIT_TRUNK}
    unmerged-branches-all = !git --no-pager branch --all --no-merged ${GIT_TRUNK}
    unmerged-branches-allv = !git --no-pager branch --all --no-merged ${GIT_TRUNK} --sort=-committerdate --format='%(color:bold blue)%(objectname:short)%(color:reset) %(color:white)%(refname:short)%(color:reset) (%(color:green)%(committerdate:relative)%(color:reset))%(color:dim white) - %(authorname)%(color:reset)'
    author-line-count = !git ls-files | xargs -n1 git blame -w -M -C -C --line-porcelain | gsed -n 's/^author //p' | sort -f | uniq -ic | sort -nr
    author-commits = !git shortlog -sn --all
    ;recent-branches = !git reflog show --pretty=format:'%gs ~ %gd' --date=relative | grep 'checkout:' | grep -oE '[^ ]+ ~ .*' | awk -F~ '!seen[$1]++' | head -n 10 | awk -F' ~ HEAD@{' '{printf(\"  \\033[33m%s: \\033[37m %s\\033[0m\\n\", substr($2, 1, length($2)-1), $1)}'
    recent-branches = !git reflog show --pretty=format:'%gs ~ %gd' --date=relative | grep 'checkout:' | grep -oE '[^ ]+ ~ .*' | awk -F~ '!seen[$1]++' | gsed -r 's/(.+) ~ HEAD@\\{([^\\}]+)\\}$/\\2,\\1/g' | gsed 's/,,/,-,/g' | column -t -s '',''
    find-deleted-file = log --full-history -1 -- 
    track-all = "!for remote in $(git branch -r | grep -v -- '->'); do git branch --track ${remote##origin/} $remote; done"

[core]
	editor = nvim
	autocrlf = input
	hooksPath = ~/.githooks
	pager = git-split-diffs --color | less -RFX

[diff]
	tool = vimdiff
	algorithm = minimal

[difftool "vimdiff"]
    cmd = nvim -d $BASE $LOCAL

[merge]
    tool = vimmmerge

[mergetool]
    prompt = true

[mergetool "vimmmerge"]
    cmd = nvim -d $BASE $LOCAL $REMOTE $MERGED -c '$wincmd w' -c 'wincmd J'

[url "github-work"]
    insteadOf = git@github.com/elsevier-research

[includeIf "gitdir:~/dev/bassc/"]
    path = ~/dev/my-stuff/dotfiles/git/bassc-config/.gitconfig

[includeIf "gitdir:~/dev/my-stuff/"]
    path = ~/dev/my-stuff/dotfiles/git/personal-config/.gitconfig

[includeIf "gitdir:~/dev/for-nat/"]
    path = ~/dev/my-stuff/dotfiles/git/personal-config/.gitconfig

[includeIf "gitdir:~/Dropbox/Private/org/"]
    path = ~/Dev/my-stuff/dotfiles/git/personal-config/.gitconfig

[includeIf "gitdir:~/Dropbox/Private/obsidian/"]
    path = ~/dev/my-stuff/dotfiles/git/personal-config/.gitconfig

[includeIf "gitdir:~/dev/recommenders/"]
    path = ~/dev/my-stuff/dotfiles/git/work-config/.gitconfig

[includeIf "gitdir:~/dev/code-review/recommenders/"]
    path = ~/dev/my-stuff/dotfiles/git/work-config/.gitconfig

[includeIf "gitdir:~/dev/code-review/rdp/"]
    path = ~/dev/my-stuff/dotfiles/git/work-config/.gitconfig

[includeIf "gitdir:~/dev/code-review/mentoring/"]
    path = ~/dev/my-stuff/dotfiles/git/work-config/.gitconfig

[includeIf "gitdir:~/dev/newsflo/"]
    path = ~/dev/my-stuff/dotfiles/git/work-config/.gitconfig

[includeIf "gitdir:~/dev/scratchpad/"]
    path = ~/dev/my-stuff/dotfiles/git/work-config/.gitconfig

[includeIf "gitdir:~/dev/kedro/"]
    path = ~/dev/my-stuff/dotfiles/git/work-config/.gitconfig

[includeIf "gitdir:~/dev/rdp/"]
    path = ~/dev/my-stuff/dotfiles/git/work-config/.gitconfig

[includeIf "gitdir:~/dev/kd/"]
    path = ~/dev/my-stuff/dotfiles/git/work-config/.gitconfig

[includeIf "gitdir:~/dev/scratchpad/"]
    path = ~/dev/my-stuff/dotfiles/git/work-config/.gitconfig

[mailmap]
	file = ~/.mailmap

[log]
	mailmap = true
